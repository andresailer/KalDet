##############################################################################
# cmake configuration file for KalDet
#
# requires:
#   MacroCheckPackageLibs.cmake for checking package libraries
#
# returns following variables:
#
#   KalDet_FOUND      : set to TRUE if KalDet found
#       if FIND_PACKAGE called with REQUIRED and COMPONENTS arguments
#       KalDet_FOUND is only set to TRUE if ALL components are also found
#       if REQUIRED is NOT set components may or may not be available
#
#   KalDet_ROOT       : path to this KalDet installation
#   KalDet_LIBRARIES  : list of KalDet libraries (NOT including COMPONENTS)
#   KalDet_INCLUDE_DIRS  : list of paths to be used with INCLUDE_DIRECTORIES
#   KalDet_LIBRARY_DIRS  : list of paths to be used with LINK_DIRECTORIES
#   KalDet_COMPONENT_LIBRARIES      : list of KalDet component libraries
#   KalDet_${COMPONENT}_FOUND       : set to TRUE or FALSE for each library
#   KalDet_${COMPONENT}_LIBRARY     : path to individual libraries
#   KalDet_${COMPONENT}_LIB_DEPENDS : individual library dependencies
#
# @author Jan Engels, Desy
##############################################################################

SET( KalDet_ROOT "@CMAKE_INSTALL_PREFIX@" )


# ---------- include dirs -----------------------------------------------------
# do not store find results in cache
SET( KalDet_INCLUDE_DIRS KalDet_INCLUDE_DIRS-NOTFOUND )
MARK_AS_ADVANCED( KalDet_INCLUDE_DIRS )

FIND_PATH( KalDet_INCLUDE_DIRS
	NAMES kaldet/EXVKalDetector.h
	PATHS ${KalDet_ROOT}/include
	NO_DEFAULT_PATH
)

# fix for backwards compatibility
IF( KalDet_INCLUDE_DIRS )
    LIST( APPEND KalDet_INCLUDE_DIRS ${KalDet_INCLUDE_DIRS}/kaldet )
ENDIF( KalDet_INCLUDE_DIRS )


# ---------- libraries --------------------------------------------------------
INCLUDE( ${KalDet_ROOT}/cmake/MacroCheckPackageLibs.cmake ) # FIXME full path ?!

# only standard libraries should be passed as arguments to CHECK_PACKAGE_LIBS
# additional components are set by cmake in variable PKG_FIND_COMPONENTS
# first argument should be the package name
CHECK_PACKAGE_LIBS( KalDet KalDet )




# ---------- libraries dependencies -------------------------------------------
# this sets KalDet_${COMPONENT}_LIB_DEPENDS variables
INCLUDE( "${KalDet_ROOT}/lib/cmake/KalDetLibDeps.cmake" )
 



# ---------- final checking ---------------------------------------------------
INCLUDE( FindPackageHandleStandardArgs )
# set KALDET_FOUND to TRUE if all listed variables are TRUE and not empty
# KalDet_COMPONENT_VARIABLES will be set if FIND_PACKAGE is called with REQUIRED argument
FIND_PACKAGE_HANDLE_STANDARD_ARGS( KalDet DEFAULT_MSG KalDet_ROOT KalDet_INCLUDE_DIRS KalDet_LIBRARIES ${KalDet_COMPONENT_VARIABLES} )

SET( KalDet_FOUND ${KALDET_FOUND} )
