$Id: README,v 1.1.1.1 2009-11-24 00:13:59 ikematsu Exp $

Description: To be filled...


-------------------------------------------------------------------------------
  KalDet Package now part of iLCSoft

  ( F.Gaede, J.Engels, 2010/10/08)
-------------------------------------------------------------------------------


Dependencies: KalDet depends on KalTest, ROOT, ILCUTIL and Marlin


---- Building KalDet with cmake:

The KalDet package has been included in the iLCSoft framework and can be
installed with ilcinstall and built with cmake. Since all KalDet dependencies
are included in the iLCSoft framework the easiest way to build KalDet is to
make use of an existing iLCSoft installation, i.e.:

# init ilcsoft
. /path/to/ilcsoft/vXX-YY-ZZ/init_ilcsoft.sh

# configure
cmake -C $ILCSOFT/ILCSoft.cmake ..

# build
make install


---- Building against the KalDet Library with cmake:


    # configure your project with option -DKalDet_DIR as follows:
    cmake -DKalDet_DIR=/path/to/KalDet ..


    # add the usual cmake mechanism to the CMakeLists.txt of your project, e.g.:

      FIND_PACKAGE( KalDet ) # if KalDet is optional

      IF( KalDet_FOUND )
        INCLUDE_DIRECTORIES( ${KalDet_INCLUDE_DIRS} )
        TARGET_LINK_LIBRARIES( ${LIBNAME} ${KalDet_LIBRARIES})
        #ADD_DEFINITIONS( "-DMYPKG_USE_KALDET" ) # just an example to activate source code
      ENDIF( KalDet_FOUND )


      # if your package doesn't make sense without KalDet, use the REQUIRED option:
      FIND_PACKAGE( KalDet REQUIRED ) # gives an error if KalDet is not found

      INCLUDE_DIRECTORIES( ${KalDet_INCLUDE_DIRS} )
      TARGET_LINK_LIBRARIES( ${LIBNAME} ${KalDet_LIBRARIES})


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  Note: with a cmake install the KalDet header files will be installed in
        ./include/kaldet  so make sure you use this in your C++ files, eg:

      #include "kaldet/EXTPCKalDetector.h"
      #include "kaldet/EXEventGen.h"
      #include "kaldet/EXTPCHit.h"


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



=====================================================================================

  Release Notes:

=====================================================================================


 --------
| v01-03 |  
 -------- 

    ILD: 
 	- Multilayer measurement layers added, which allow a single kaltest layer to represent numbers detector layers. 
	- Added names to support measurement layers
	- ILDParallelStripPlanarMeasLayer and ILDPlanarStripHit First shot at 1-D strip hits. 
	  Only measurements purely in the transverse plane are implemeted so far.
	- ILDVMeasLayer Name attribute moved up to TVMeasLayer in KalTest, added new method getIntersectionAndCellID. 
          This enables multilayers to efficiently return the crossing point and cellID of the intersected sub layer.
        - ILDSupportKalDetector added calo face to support detector, added beryllium and corrected rad length of aluminium
	- ILDVXDKalDetector corrected calculation of overlap region
	- ILDSITKalDetector added support for double layer SIT with layers facing away from the IP
	- ILDTPCKalDetector corrected TPC field cage for new TPC10.cc from Mokka
	- ILDFTDKalDetector corrected sign issue and corrected sortpolicy, fixed bug in material, carbon vs air, corrected measurement layer order
	- ILDSegmentedDiscMeasLayer Added segmented disc needed for FTD
        - Removed unnecessary casting


 --------
| v01-02 |  
 -------- 

	- Updated for ILD detector reconstruction with KalTest and MarlinTrk
	
	- ILD detectors added in new ild directory. 
		- VXD, TPC, FTD(both simple disk and petal based)
		- SIT is currently only a placeholder using simple planar design
	- common hit and plane classes added to ild/common subdirectory
	
	- uses UTIL/ILDConf.h from lcio for detector element encoding

    - Added ILDParallelPlanarMeasLayer for VXD and SIT, which has closed
      solution for calculating the crossing point of a helix.
      Constructor ensures that it is parallel by supplying only r and phi,
      which are used to calculate the normal and centre for planar surface.



 -----------
| v01-01-01 |  - bug fixed in cmake files for mac osx compatibility - no code changes.
 ----------- 

 --------
| v01-01 |  - improvements in cmake files - no code changes.
 -------- 


 --------
| v01-00 |  - first release as part of iLCSoft - no code changes.
 --------     (except header in subdirectory 'include/kaldet', when installed with cmake)


